@Required 在spring的配置文件中 表示当前的属性必须在配置文件中包含

@Autowired 注释可以在 setter 方法中被用于自动连接 bean，就像 @Autowired 注释，容器，一个属性或者
任意命名的可能带有多个参数的方法。

Setter 方法中的 @Autowired  
===setter 方法中使用 d @Autowired 注释来除去 元素。当 Spring遇到一个在 setter 方法
中使用的 @Autowired 注释，它会在方法中视图执行 e byType 自动连接。

属性中的 @Autowired
===在属性中使用 d @Autowired 注释来除去 setter 方法。当时使用 为自动连接属性传递的时候，Spring 会
将这些传递过来的值或者引用自动分配给那些属性。

构造函数中的@Autowired
也可以在构造函数中使用 @Autowired。一个构造函数 @Autowired 说明当创建 bean 时，即使在 XML 文
件中没有使用 元素配置 bean ，构造函数也会被自动连接。


@Autowired 注释意味着依赖是必须的，它类似于 @Required 注释，然而，你可以使用 @Auto
wired 的  （required=false） 选项关闭默认行为。


当你创建多个具有相同类型的 bean 时，并且想要用一个属性只为它们其中的一个进行
装配，在这种情况下，你可以使用 r @Qualifier 注释和 d @Autowired 注释通过指定哪一个真正的 bean 将会被装
配来消除混乱。


为了定义一个 bean 的安装和卸载，我们使用 d init-method 和/或 d destroy-method 参数简单的声明一下 。init-
method 属性指定了一个方法，该方法在 bean 的实例化阶段会立即被调用。同样地，destroy-method 指定了
一个方法，该方法只在一个 bean 从容器中删除之前被调用。
你可以使用 t @PostConstruct 注释作为初始化回调函数的一个替代，y @PreDestroy 注释作为销毁回调函数的

@Configuration 的注解类表示这个类可以使用 Spring IoC 容器作为 bean 定义的来源.
@Bean 注解告诉 Spring，一个带有 @Bean 的注解方法将返回一个对象，该对象应该被注册为在 Spring 应用程序上下文中的 bean。
带有 @Bean 注解的方法名称作为 bean 的 ID，它创建并返回实际的 bean。你的配置类可以声明多个
@Bean。一旦定义了配置类，你就可以使用 AnnotationConfigApplicationContext 来加载并把他们提供给 Sp
ring 容器，

@import 注解允许从另一个配置类中加载 @Bean 定义。

@Bean 注解支持指定任意的初始化和销毁的回调方法，就像在 bean 元素中 Spring 的 XML 的初始化方法和销
毁方法的属性
@Bean(initMethod = "init", destroyMethod = "cleanup" )

指定 Bean 的范围：
默认范围是单实例，但是你可以重写带有 @Scope 注解的该方法
@Scope("prototype")